/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-11-30 05:08:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class makerecipe_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

Cookie[] cookies = request.getCookies();

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link href=\"makerecipe.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("	var count = 1;\r\n");
      out.write("	$(document)\r\n");
      out.write("			.ready(\r\n");
      out.write("					function() {\r\n");
      out.write("						$('#add_ingredient')\r\n");
      out.write("								.click(\r\n");
      out.write("										function() {\r\n");
      out.write("											var tbl = $('<tr><td class=\"type_name\"></td>');\r\n");
      out.write("											$(tbl)\r\n");
      out.write("													.append(\r\n");
      out.write("															'<td class=\"type_context\"><input type=\"text\" name=\"ingredient\"+\"(count++)\" ></td>');\r\n");
      out.write("											$(tbl)\r\n");
      out.write("													.append(\r\n");
      out.write("															'<td class=\"type_context\"><input type=\"text\" name=\"amount\"+\"(count++)\" ></td></tr>');\r\n");
      out.write("											$('#ingredient_table').append(tbl);\r\n");
      out.write("										});\r\n");
      out.write("\r\n");
      out.write("						$('#add_step')\r\n");
      out.write("								.click(\r\n");
      out.write("										function() {\r\n");
      out.write("											var tbl = $('<tr><td class=\"type_name\"></td>');\r\n");
      out.write("											$(tbl)\r\n");
      out.write("													.append(\r\n");
      out.write("															'<td class=\"type_context\"><textarea name=\"step_explain\"> </textarea></td>');\r\n");
      out.write("											$(tbl)\r\n");
      out.write("													.append(\r\n");
      out.write("															'<td class=\"type_context\"><input type=\"file\" value=\"사진 추가\" name=\"stepimage\"+\"(count++)\" accept=\"image/gif,image/jpeg,image/png\"><br><br><input type=\"file\" value=\"동영상 추가\"  accept=\"video/*\"></td></tr>');\r\n");
      out.write("											$('#step_table').append(tbl);\r\n");
      out.write("										});\r\n");
      out.write("\r\n");
      out.write("					});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"wrap\">\r\n");
      out.write("		<div id=\"head\">\r\n");
      out.write("			<img src=\"DB에서 새싹 사진 가져와\">허브레시피\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div id=\"title\">레시피 등록</div>\r\n");
      out.write("\r\n");
      out.write("		<div id=\"main\">\r\n");
      out.write("			<form action=\"makerecipe-db.jsp\" method=\"post\"\r\n");
      out.write("				enctype=\"multipart/form-data\">\r\n");
      out.write("				<table name=\"first\">\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"type_name\">요리 이름</td>\r\n");
      out.write("						<td class=\"type_context\"><input type=\"text\" name=\"menu_name\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>&nbsp</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"type_name\">요리 설명</td>\r\n");
      out.write("						<td class=\"type_context\"><textarea name=\"menu_explain\"> </textarea></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("				<div id=\"mainPic\">\r\n");
      out.write("					<img src=\"DB에서 레시피 메인사진 가져와\"><input type=\"file\" class=\"file\"\r\n");
      out.write("						name=\"mainimage1\" value=\"사진 추가\"\r\n");
      out.write("						accept=\"image/gif,image/jpeg,image/png\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<table id=\"ingredient_table\">\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"type_name\">재료 설정</td>\r\n");
      out.write("						<td class=\"type_context\"><input type=\"text\" name=\"ingredient\"></td>\r\n");
      out.write("						<td class=\"type_context\"><input type=\"text\" name=\"amount\"></td>\r\n");
      out.write("						<td><input type=\"button\" value=\"재료 추가\" id=\"add_ingredient\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("				<table id=\"step_table\">\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"type_name\">상세 설명<br> <br> <input\r\n");
      out.write("							type=\"button\" value=\"단계 추가\" id=\"add_step\"></td>\r\n");
      out.write("						<td class=\"type_context\"><textarea name=\"step_explain\"> </textarea></td>\r\n");
      out.write("						<td class=\"type_context\"><input type=\"file\" value=\"사진 추가\"\r\n");
      out.write("							onchange=\"setThumbnail(event);\"><br> <br> <input\r\n");
      out.write("							type=\"file\" value=\"동영상 추가\"\r\n");
      out.write("							accept=\"image/gif,image/jpeg,image/png\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("				<table>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"type_name\">태그 설정</td>\r\n");
      out.write("						<td class=\"type_context\"><input type=\"text\" name=\"tag\"\r\n");
      out.write("							id=\"tag_explain\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td><input type=\"submit\" value=\"글쓰기\" /></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		$(document).ready(\r\n");
      out.write("				function() {\r\n");
      out.write("					var fileTarget = $('.file');\r\n");
      out.write("					fileTarget.on('change', function() {\r\n");
      out.write("						if (window.FileReader) {\r\n");
      out.write("							var filename = $(this)[0].files[0].name;\r\n");
      out.write("						} else {\r\n");
      out.write("							var filename = $(this).val().split('/').pop()\r\n");
      out.write("									.split('\\\\').pop();\r\n");
      out.write("						}\r\n");
      out.write("\r\n");
      out.write("						//$(this).siblings('.file-name').val(filename);\r\n");
      out.write("					});\r\n");
      out.write("				});\r\n");
      out.write("		function linked(link) {\r\n");
      out.write("			location.href = link;\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
